<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Edit <%= pageKey %> - Cosmos Codex Admin</title>
    <link href="https://fonts.googleapis.com/css2?family=Quicksand:wght@400;700&display=swap" rel="stylesheet">
    <style>
        body {
            font-family: 'Quicksand', sans-serif;
            margin: 0;
            padding: 0;
            background: #f0f2f5;
        }
        
        .admin-header {
            background: white;
            padding: 16px 24px;
            box-shadow: 0 2px 8px rgba(0,0,0,0.1);
            display: flex;
            justify-content: space-between;
            align-items: center;
        }
        
        .admin-title {
            font-size: 24px;
            font-weight: 600;
            color: #1890ff;
            margin: 0;
        }
        
        .admin-nav {
            display: flex;
            gap: 16px;
            align-items: center;
        }
        
        .admin-nav a {
            color: #666;
            text-decoration: none;
            padding: 8px 16px;
            border-radius: 6px;
            transition: all 0.3s;
        }
        
        .admin-nav a:hover {
            background: #e6f7ff;
            color: #1890ff;
        }
        
        .edit-container {
            max-width: 1400px;
            margin: 0 auto;
            padding: 24px;
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 24px;
            height: calc(100vh - 120px);
        }
        
        .edit-panel {
            background: white;
            border-radius: 12px;
            box-shadow: 0 2px 8px rgba(0,0,0,0.1);
            display: flex;
            flex-direction: column;
            overflow: hidden;
        }
        
        .panel-header {
            padding: 16px 24px;
            border-bottom: 1px solid #f0f0f0;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }
        
        .panel-title {
            font-size: 18px;
            font-weight: 600;
            margin: 0;
            color: #333;
        }
        
        .panel-content {
            flex: 1;
            padding: 24px;
            overflow: auto;
        }
        
        .form-group {
            margin-bottom: 16px;
        }
        
        .form-label {
            display: block;
            margin-bottom: 8px;
            font-weight: 500;
            color: #333;
        }
        
        .form-input {
            width: 100%;
            padding: 8px 12px;
            border: 1px solid #d9d9d9;
            border-radius: 6px;
            font-size: 14px;
            box-sizing: border-box;
        }
        
        .form-textarea {
            width: 100%;
            height: calc(100% - 150px);
            padding: 12px;
            border: 1px solid #d9d9d9;
            border-radius: 6px;
            font-size: 14px;
            font-family: 'Monaco', 'Menlo', 'Ubuntu Mono', monospace;
            resize: none;
            box-sizing: border-box;
        }
        
        .form-input:focus,
        .form-textarea:focus {
            outline: none;
            border-color: #1890ff;
            box-shadow: 0 0 0 2px rgba(24, 144, 255, 0.2);
        }
        
        .button-group {
            display: flex;
            gap: 12px;
            margin-top: 16px;
        }
        
        .button {
            padding: 10px 20px;
            border: none;
            border-radius: 6px;
            font-size: 14px;
            font-weight: 500;
            cursor: pointer;
            transition: all 0.3s;
            text-decoration: none;
            display: inline-block;
            text-align: center;
        }
        
        .button-primary {
            background: #1890ff;
            color: white;
        }
        
        .button-primary:hover {
            background: #40a9ff;
        }
        
        .button-secondary {
            background: #f0f2f5;
            color: #666;
        }
        
        .button-secondary:hover {
            background: #d9d9d9;
        }
        
        .markdown-body {
            line-height: 1.6;
            color: #333;
        }
        
        .markdown-body h1,
        .markdown-body h2,
        .markdown-body h3,
        .markdown-body h4,
        .markdown-body h5,
        .markdown-body h6 {
            margin-top: 24px;
            margin-bottom: 16px;
            font-weight: 600;
            color: #1890ff;
        }
        
        .markdown-body h1 {
            font-size: 32px;
        }
        
        .markdown-body h2 {
            font-size: 24px;
        }
        
        .markdown-body h3 {
            font-size: 20px;
        }
        
        .markdown-body p {
            margin-bottom: 16px;
        }
        
        .markdown-body ul,
        .markdown-body ol {
            margin-bottom: 16px;
            padding-left: 32px;
        }
        
        .markdown-body li {
            margin-bottom: 8px;
        }
        
        .markdown-body img {
            max-width: 100%;
            height: auto;
        }
        
        .markdown-body code {
            background: #f0f2f5;
            padding: 2px 6px;
            border-radius: 4px;
            font-family: 'Monaco', 'Menlo', 'Ubuntu Mono', monospace;
        }
        
        .markdown-body pre {
            background: #f0f2f5;
            padding: 16px;
            border-radius: 6px;
            overflow-x: auto;
        }
        
        .success-message {
            background: #f6ffed;
            border: 1px solid #b7eb8f;
            color: #52c41a;
            padding: 12px;
            border-radius: 6px;
            margin-bottom: 16px;
        }
        
        .error-message {
            background: #fff2f0;
            border: 1px solid #ffccc7;
            color: #ff4d4f;
            padding: 12px;
            border-radius: 6px;
            margin-bottom: 16px;
        }
        
        @media (max-width: 768px) {
            .edit-container {
                grid-template-columns: 1fr;
                height: auto;
            }
        }
    </style>
</head>
<body>
    <header class="admin-header">
        <h1 class="admin-title">Edit: <%= pageKey %> (<%= language %>)</h1>
        <nav class="admin-nav">
            <a href="/admin">Dashboard</a>
            <a href="/docs/<%= pageKey %>?lang=<%= language %>" target="_blank">View Page</a>
            <a href="/admin/logout">Logout</a>
        </nav>
    </header>

    <div class="edit-container">
        <!-- Editor Panel -->
        <div class="edit-panel">
            <div class="panel-header">
                <h2 class="panel-title">Editor</h2>
                <div class="button-group">
                    <button type="button" class="button button-secondary" onclick="uploadImage()">üì∑ Upload Image</button>
                </div>
            </div>
            <div class="panel-content">
                <form id="edit-form">
                    <div class="form-group">
                        <label for="title" class="form-label">Page Title</label>
                        <input 
                            type="text" 
                            id="title" 
                            name="title" 
                            class="form-input" 
                            value="<%= content && content.frontMatter ? content.frontMatter.title || '' : '' %>"
                        >
                    </div>
                    
                    <div class="form-group">
                        <label for="category" class="form-label">Category</label>
                        <input 
                            type="text" 
                            id="category" 
                            name="category" 
                            class="form-input" 
                            value="<%= content && content.frontMatter ? content.frontMatter.category || 'general' : 'general' %>"
                        >
                    </div>
                    
                    <div class="form-group">
                        <label for="order" class="form-label">Order</label>
                        <input 
                            type="number" 
                            id="order" 
                            name="order" 
                            class="form-input" 
                            value="<%= content && content.frontMatter ? content.frontMatter.order || 999 : 999 %>"
                        >
                    </div>
                    
                    <div class="form-group" style="flex: 1; display: flex; flex-direction: column;">
                        <label for="content" class="form-label">Content (Markdown)</label>
                        <textarea 
                            id="content" 
                            name="content" 
                            class="form-textarea"
                            placeholder="Enter your markdown content here..."
                        ><%= content ? content.content : '' %></textarea>
                    </div>
                    
                    <div class="button-group">
                        <button type="button" class="button button-primary" onclick="saveContent()">üíæ Save</button>
                        <button type="button" class="button button-secondary" onclick="previewContent()">üëÅÔ∏è Preview</button>
                        <a href="/admin" class="button button-secondary">‚Üê Back to Dashboard</a>
                    </div>
                </form>
                
                <div id="message-container"></div>
            </div>
        </div>

        <!-- Preview Panel -->
        <div class="edit-panel">
            <div class="panel-header">
                <h2 class="panel-title">Preview</h2>
                <button type="button" class="button button-secondary" onclick="previewContent()">üîÑ Refresh</button>
            </div>
            <div class="panel-content">
                <div id="preview-content" class="markdown-body">
                    <% if (content) { %>
                        <%- content.html %>
                    <% } else { %>
                        <p style="color: #666;">Enter content and click Preview to see the rendered output.</p>
                    <% } %>
                </div>
            </div>
        </div>
    </div>

    <!-- Hidden file input for image uploads -->
    <input type="file" id="file-input" accept="image/*" style="display: none;">

    <script>
        function showMessage(message, type = 'success') {
            const container = document.getElementById('message-container');
            const messageDiv = document.createElement('div');
            messageDiv.className = type === 'success' ? 'success-message' : 'error-message';
            messageDiv.textContent = message;
            
            container.innerHTML = '';
            container.appendChild(messageDiv);
            
            setTimeout(() => {
                container.innerHTML = '';
            }, 5000);
        }

        async function saveContent() {
            const form = document.getElementById('edit-form');
            const formData = new FormData(form);
            
            const contentData = {
                language: '<%= language %>',
                content: formData.get('content'),
                frontMatter: {
                    title: formData.get('title'),
                    category: formData.get('category'),
                    order: parseInt(formData.get('order')) || 999
                }
            };
            
            try {
                const response = await fetch('/api/content/<%= pageKey %>', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(contentData)
                });
                
                if (response.ok) {
                    showMessage('Content saved successfully!', 'success');
                    previewContent();
                } else {
                    showMessage('Error saving content. Please try again.', 'error');
                }
            } catch (error) {
                showMessage('Error saving content: ' + error.message, 'error');
            }
        }

        async function previewContent() {
            const content = document.getElementById('content').value;
            
            try {
                // Simple markdown to HTML conversion for preview
                const html = content
                    .replace(/^# (.*$)/gim, '<h1>$1</h1>')
                    .replace(/^## (.*$)/gim, '<h2>$1</h2>')
                    .replace(/^### (.*$)/gim, '<h3>$1</h3>')
                    .replace(/^#### (.*$)/gim, '<h4>$1</h4>')
                    .replace(/^\* (.*$)/gim, '<li>$1</li>')
                    .replace(/^\- (.*$)/gim, '<li>$1</li>')
                    .replace(/\*\*(.*)\*\*/gim, '<strong>$1</strong>')
                    .replace(/\*(.*)\*/gim, '<em>$1</em>')
                    .replace(/\n\n/gim, '</p><p>')
                    .replace(/\n/gim, '<br>');
                
                document.getElementById('preview-content').innerHTML = '<p>' + html + '</p>';
            } catch (error) {
                showMessage('Error previewing content: ' + error.message, 'error');
            }
        }

        function uploadImage() {
            document.getElementById('file-input').click();
        }

        document.getElementById('file-input').addEventListener('change', async function(e) {
            const file = e.target.files[0];
            if (!file) return;
            
            const formData = new FormData();
            formData.append('file', file);
            
            try {
                const response = await fetch('/api/upload', {
                    method: 'POST',
                    body: formData
                });
                
                if (response.ok) {
                    const result = await response.json();
                    const imageMarkdown = `![${file.name}](${result.url})`;
                    
                    // Insert image markdown at cursor position
                    const textarea = document.getElementById('content');
                    const cursorPos = textarea.selectionStart;
                    const textBefore = textarea.value.substring(0, cursorPos);
                    const textAfter = textarea.value.substring(cursorPos);
                    
                    textarea.value = textBefore + imageMarkdown + textAfter;
                    textarea.focus();
                    textarea.setSelectionRange(cursorPos + imageMarkdown.length, cursorPos + imageMarkdown.length);
                    
                    showMessage('Image uploaded successfully!', 'success');
                } else {
                    showMessage('Error uploading image. Please try again.', 'error');
                }
            } catch (error) {
                showMessage('Error uploading image: ' + error.message, 'error');
            }
        });

        // Auto-save functionality
        let autoSaveTimeout;
        document.getElementById('content').addEventListener('input', function() {
            clearTimeout(autoSaveTimeout);
            autoSaveTimeout = setTimeout(() => {
                previewContent();
            }, 1000);
        });
    </script>
</body>
</html>